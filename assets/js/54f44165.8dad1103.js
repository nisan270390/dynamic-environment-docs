"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[152],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=m(n),d=r,g=p["".concat(s,".").concat(d)]||p[d]||u[d]||i;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},681:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_label:"Installation",sidebar_position:2},l="Installation",o={unversionedId:"getting-started/installation",id:"getting-started/installation",title:"Installation",description:"Assuming you've successfully set up your environment, following the guidelines provided on",source:"@site/docs/getting-started/installation.md",sourceDirName:"getting-started",slug:"/getting-started/installation",permalink:"/getting-started/installation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Installation",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Requirements",permalink:"/getting-started/requirements"},next:{title:"Running Sample",permalink:"/getting-started/running"}},s={},m=[{value:"Deployment via Kustomize",id:"deployment-via-kustomize",level:3},{value:"Deploy via Helm",id:"deploy-via-helm",level:3}],c={toc:m},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Assuming you've successfully set up your environment, following the guidelines provided on\nthe ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/requirements"},"requirements page"),", you can proceed to generate manifests and deploy the\ncontroller:"),(0,r.kt)("h3",{id:"deployment-via-kustomize"},"Deployment via Kustomize"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Edit the ",(0,r.kt)("inlineCode",{parentName:"li"},"$REPOSITORY_ROOT/config/manager/manager.yaml")," file and set the ",(0,r.kt)("inlineCode",{parentName:"li"},"image")," field to the\ncurrent version (see below example of defining the image as an environment variable):")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# ...\nspec:\n  # ...\n  template:\n    # ...\n    spec:\n      # ...\n      containers:\n        # ...\n        image: ghcr.io/Riskified/dynamic-environment:TAG\n")),(0,r.kt)("p",null,"You can further customize the deployment by adjusting the following settings:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/references/custom-settings#versionlabel-and-defaultversion"},(0,r.kt)("em",{parentName:"a"},"VersionLabel"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/references/custom-settings#versionlabel-and-defaultversion"},(0,r.kt)("em",{parentName:"a"},"DefaultVersion"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/references/custom-settings#labels-to-remove-when-creating-overriding-deployments"},(0,r.kt)("em",{parentName:"a"},"--remove-labels")))),(0,r.kt)("p",null,"These settings can be changed in the ",(0,r.kt)("inlineCode",{parentName:"p"},"config/manager/manager.yaml")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# ...\nspec:\n  # ...\n  template:\n    # ...\n    spec:\n      # ...\n      containers:\n        # ...\n        args:\n          - --leader-elect\n          - --version-label\n          - version <-- this should be replaced to change the label\n          - --default-version\n          - shared <-- this should be replaced to change the default version\n        # Uncomment the lines below (and modify as needed) to specify labels to be removed (comma-separated list)\n        #- --remove-labels\n        #- argocd.argoproj.io/instance\n")),(0,r.kt)("p",null,"Once you have configured everything, deploy the controller using the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'make deploy\n# or with image as environment varible\nmake deploy IMG="ghcr.io/Riskified/dynamic-environment:TAG"\n')),(0,r.kt)("h3",{id:"deploy-via-helm"},"Deploy via Helm"),(0,r.kt)("p",null,"Helm uses a ",(0,r.kt)("inlineCode",{parentName:"p"},"values.yaml")," file (",(0,r.kt)("inlineCode",{parentName:"p"},"helm/dynamic-environment/values.yaml"),") with predefined values\nyou can override. At the very least, ensure you correctly set up the image details:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=values.yaml",title:"values.yaml"},"[ ... ]\nimage:\n  repository: ghcr.io/Riskified/dynamic-environment\n  tag: TAG\n  pullPolicy: IfNotPresent\n  [ ... ]\n")),(0,r.kt)("p",null,"For more extensive customization, refer to the comments in the values file and compare them to\nthe ",(0,r.kt)("a",{parentName:"p",href:"/references/custom-settings"},"custom settings")," for in-depth details."),(0,r.kt)("p",null,"Once you've finished making your edits, execute the following command (from within the ",(0,r.kt)("inlineCode",{parentName:"p"},"helm"),"\ndirectory):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# you can edit this command to set values or specify alternative settings file\nhelm install dynamic-environment-operator .\n")))}u.isMDXComponent=!0}}]);